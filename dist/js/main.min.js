"use strict";function _slicedToArray(e,t){return _arrayWithHoles(e)||_iterableToArrayLimit(e,t)||_unsupportedIterableToArray(e,t)||_nonIterableRest()}function _nonIterableRest(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}function _iterableToArrayLimit(e,t){var n=null==e?null:"undefined"!=typeof Symbol&&e[Symbol.iterator]||e["@@iterator"];if(null!=n){var r,o,a,l,c=[],i=!0,s=!1;try{if(a=(n=n.call(e)).next,0===t){if(Object(n)!==n)return;i=!1}else for(;!(i=(r=a.call(n)).done)&&(c.push(r.value),c.length!==t);i=!0);}catch(e){s=!0,o=e}finally{try{if(!i&&null!=n.return&&(l=n.return(),Object(l)!==l))return}finally{if(s)throw o}}return c}}function _arrayWithHoles(e){if(Array.isArray(e))return e}function _toConsumableArray(e){return _arrayWithoutHoles(e)||_iterableToArray(e)||_unsupportedIterableToArray(e)||_nonIterableSpread()}function _nonIterableSpread(){throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}function _unsupportedIterableToArray(e,t){var n;if(e)return"string"==typeof e?_arrayLikeToArray(e,t):"Map"===(n="Object"===(n=Object.prototype.toString.call(e).slice(8,-1))&&e.constructor?e.constructor.name:n)||"Set"===n?Array.from(e):"Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)?_arrayLikeToArray(e,t):void 0}function _iterableToArray(e){if("undefined"!=typeof Symbol&&null!=e[Symbol.iterator]||null!=e["@@iterator"])return Array.from(e)}function _arrayWithoutHoles(e){if(Array.isArray(e))return _arrayLikeToArray(e)}function _arrayLikeToArray(e,t){(null==t||t>e.length)&&(t=e.length);for(var n=0,r=new Array(t);n<t;n++)r[n]=e[n];return r}var menuOpenBtn=document.querySelector(".nav__mobile-menu-btn--open"),menuCloseBtn=document.querySelector(".nav__mobile-menu-btn--close"),mobileMenu=document.querySelector(".nav__menu"),gallerySlider=(menuOpenBtn.addEventListener("click",function(){mobileMenu.classList.add("active"),menuOpenBtn.classList.add("hide-btn"),menuCloseBtn.classList.add("show-btn")}),menuCloseBtn.addEventListener("click",function(){mobileMenu.classList.remove("active"),menuOpenBtn.classList.remove("hide-btn"),menuCloseBtn.classList.remove("show-btn")}),document.querySelector(".showreel__gallery-img-box")),buttons=document.querySelectorAll("[data-carousel-button]"),galleryBox=document.querySelector(".showreel__gallery-img-box"),accordeon=(buttons.forEach(function(e){e.addEventListener("click",function(){var o="next"===e.dataset.carouselButton?1:-1,a=document.querySelectorAll(".showreel__position");a.forEach(function(e,t){var n=gallerySlider.querySelector("[data-slide-".concat(t,"]")),r=_toConsumableArray(a).indexOf(n)+o;(r=r<0?a.length-1:r)>a.length-1&&(r=0),a[r].dataset["slide-".concat(t)]=!0,delete n.dataset["slide-".concat(t)]})})}),window.addEventListener("resize",function(){var e=window.innerWidth/1600;galleryBox.style.transform=1<=e?"scale(1)":"scale(".concat(e,")")}),window.addEventListener("load",function(){var e=window.innerWidth;galleryBox.style.transform="scale(".concat(e/1600,")")}),document.querySelector(".questions__box-lists")),accordeonBtns=document.querySelectorAll(".questions__accordeon-box-content");function openAccordeonItems(){this.nextElementSibling.classList.contains("show-acc")?(this.nextElementSibling.classList.remove("show-acc"),this.lastElementChild.classList.remove("active")):(closeAccordeonItems(),this.nextElementSibling.classList.toggle("show-acc"),this.lastElementChild.classList.toggle("active"))}var closeAccordeonItems=function(){document.querySelectorAll(".questions__accordeon-info").forEach(function(e){return e.classList.remove("show-acc")}),accordeonBtns.forEach(function(e){e.lastElementChild.classList.remove("active")})},clickOutsideAccordeon=function(e){console.log(e.target),e.target.classList.contains("target")||e.target.classList.contains("questions__accordeon-info")||e.target.classList.contains("questions__accordeon-info-text")||closeAccordeonItems()},fromSlider=(accordeonBtns.forEach(function(e){e.addEventListener("click",openAccordeonItems)}),window.addEventListener("click",clickOutsideAccordeon),document.querySelector("#fromSlider")),toSlider=document.querySelector("#toSlider"),fromInput=document.querySelector("#fromInput"),toInput=document.querySelector("#toInput");function controlFromSlider(e,t,n){var r=_slicedToArray(getParsed(e,t),2),o=r[0],r=r[1];fillSlider(e,t,"#C6C6C6","#b60732",t),r<o?(e.value=r,n.innerText="".concat(r," zł")):n.innerText="".concat(o," zł")}function controlToSlider(e,t,n){var r=_slicedToArray(getParsed(e,t),2),o=r[0],r=r[1];fillSlider(e,t,"#C6C6C6","#b60732",t),setToggleAccessible(t),o<=r?(t.value=r,n.innerText="".concat(r," zł")):(n.innerText="".concat(o," zł"),t.value=o)}function getParsed(e,t){return[parseInt(e.value,10),parseInt(t.value,10)]}function fillSlider(e,t,n,r,o){var a=t.max-t.min,e=e.value-t.min,t=t.value-t.min;o.style.background="linear-gradient(\n      to right,\n      ".concat(n," 0%,\n      ").concat(n," ").concat(e/a*100,"%,\n      ").concat(r," ").concat(e/a*100,"%,\n      ").concat(r," ").concat(t/a*100,"%, \n      ").concat(n," ").concat(t/a*100,"%, \n      ").concat(n," 100%)")}function setToggleAccessible(e){var t=document.querySelector("#toSlider");Number(e.value)<=0?t.style.zIndex=2:t.style.zIndex=0}fillSlider(fromSlider,toSlider,"#C6C6C6","#b60732",toSlider),setToggleAccessible(toSlider),fromSlider.oninput=function(){return controlFromSlider(fromSlider,toSlider,fromInput)},toSlider.oninput=function(){return controlToSlider(fromSlider,toSlider,toInput)};var footerYear=document.querySelector(".footer__foot-year"),handleCurrentYear=function(){var e=(new Date).getFullYear();footerYear.innerText=e};handleCurrentYear();
//# sourceMappingURL=data:application/json;charset=utf8;base64,
